// This template was created with CloudFormer, a solution provided for AWS
// to generate a CloudFormation template from the existing resources

{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc8489cde2": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "wordpress-deploy"
          }
        ]
      }
    },
    "subnetfbe1cad6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "us-east-1b",
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "wordpress-db-subnet"
          }
        ]
      }
    },
    "subnet49dc412c": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private subnet"
          }
        ]
      }
    },
    "subnet48dc412d": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public subnet"
          }
        ]
      }
    },
    "igw72cdf515": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt27cd8a40": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "aclda0314bc": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc8489cde2"
        }
      }
    },
    "rtbef32bc96": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "private"
          }
        ]
      }
    },
    "rtbee32bc97": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "public"
          }
        ]
      }
    },
    "elbwordpressdeployelb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "subnet48dc412d"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:80/index.html",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "Instances": [
          {
            "Ref": "instancei0ee8b8e5c7e2cb09c"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "sgwordpressdeploypublicsg"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "wordpress-deploy-elb"
          }
        ]
      }
    },
    "eip522233198": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "instancei0ee8b8e5c7e2cb09c": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-f4cc1de2",
        "InstanceType": "t2.micro",
        "KeyName": "wp-deploy",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "wordpress-deploy-instance"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet49dc412c"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.1.7",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgwordpressdeployprivatesg"
              }
            ]
          }
        ]
      }
    },
    "instancei0b1b7abf4a04b6766": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0b33d91d",
        "InstanceType": "t2.micro",
        "KeyName": "wp-deploy",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "wordpress-deploy-bastion"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet48dc412d"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "10.0.0.98",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgwordpressdeploypublicsg"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "rdswordpressdeploy": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "10",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.t2.micro",
        "Port": "3306",
        "PubliclyAccessible": "true",
        "StorageType": "gp2",
        "BackupRetentionPeriod": "7",
        "MasterUsername": "wordpressdbadmin",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "07:55-08:25",
        "PreferredMaintenanceWindow": "wed:03:36-wed:04:06",
        "DBName": "MyDatabase",
        "Engine": "mysql",
        "EngineVersion": "5.6.27",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefaultvpc8489cde2"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sgwordpressdeployprivatesg"
          }
        ],
        "Tags": [
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ]
      }
    },
    "dbsubnetdefaultvpc8489cde2": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Created from the RDS Management Console",
        "SubnetIds": [
          {
            "Ref": "subnetfbe1cad6"
          },
          {
            "Ref": "subnet49dc412c"
          },
          {
            "Ref": "subnet48dc412d"
          }
        ]
      }
    },
    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "wordpress-deploy-sg"
          }
        ]
      }
    },
    "sgwordpressdeployprivatesg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-1 created 2017-03-02T12:01:31.977-06:00",
        "VpcId": {
          "Ref": "vpc8489cde2"
        }
      }
    },
    "sgwordpressdeploypublicsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-1 created 2017-03-02T12:04:05.619-06:00",
        "VpcId": {
          "Ref": "vpc8489cde2"
        }
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclda0314bc"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclda0314bc"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclda0314bc"
        },
        "SubnetId": {
          "Ref": "subnetfbe1cad6"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclda0314bc"
        },
        "SubnetId": {
          "Ref": "subnet49dc412c"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclda0314bc"
        },
        "SubnetId": {
          "Ref": "subnet48dc412d"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "InternetGatewayId": {
          "Ref": "igw72cdf515"
        }
      }
    },
    "subnetroute2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtbee32bc97"
        },
        "SubnetId": {
          "Ref": "subnet48dc412d"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbef32bc96"
        }
      }
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtbee32bc97"
        },
        "GatewayId": {
          "Ref": "igw72cdf515"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc8489cde2"
        },
        "DhcpOptionsId": {
          "Ref": "dopt27cd8a40"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "615282380451"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwordpressdeployprivatesg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwordpressdeploypublicsg"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwordpressdeploypublicsg"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "187.169.52.151/32"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwordpressdeployprivatesg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgwordpressdeploypublicsg"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "WordPress deploy template"
}